version: "3"

services:
  app-api:
    container_name: app-api
    tty: true
    image: app-api:latest
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    command: "gunicorn -w 2 -b :80 --access-logfile - --error-logfile - application:app --reload"
    environment:
      - "ENV=development"
      - "SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://user:password@app-db:5432/app"
    volumes:
      - ../:/project
    ports:
      - "8800:80"
    depends_on:
      - app-kafka
      - app-db
    networks:
      - app-local

  app-db:
    container_name: app-db
    image: 'postgres:11'
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=app
    ports:
      - '5432:5432'
    command:
      - "postgres"
      - "-c"
      - "max_locks_per_transaction=10000"
    networks:
      - app-local

  app-zookeeper:
    image: zookeeper:3.5.8
    container_name: app-zookeeper
    ports:
      - "2181:2181"
    networks:
      - app-local

  app-kafka:
    image: wurstmeister/kafka:2.12-2.4.1
    container_name: app-kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://app-kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: app-zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9092:9092"
    depends_on:
      - app-zookeeper
    networks:
      - app-local

  app-kafka-manager:
    image: kafkamanager/kafka-manager:3.0.0.4
    container_name: app-kafka-manager
    environment:
      ZK_HOSTS: app-zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9093:9000"
    depends_on:
      - app-kafka
    networks:
      - app-local

networks:
  app-local:
    driver: bridge